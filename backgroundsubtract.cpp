#include <iostream>
#include "opencv2/opencv.hpp"
// #include "opencv2/bgsegm.hpp"
  
using namespace cv;  
using namespace std;  

  
int main(int, char**)  
{  
    VideoCapture cap;  
    cap.open("video.flv");  
    //cap.open("test_02.wmv");  
  
    if( !cap.isOpened() )
    {
        cout << "video didn't open!" << endl;
        return -1;  
    }
  
    Mat frame;  
    // Mat fgMaskMOG; //fg mask generated by MOG method
    Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method
    // Mat fgMaskGMG; //fg mask fg mask generated by GMG method
    Mat fgMaskKNN;
    // Ptr<BackgroundSubtractor> pMOG; //MOG Background subtractor
    Ptr<BackgroundSubtractor> pMOG2; //MOG2 Background subtractor
    // Ptr<BackgroundSubtractor> pGMG; //MOG2 Background subtractor
    Ptr<BackgroundSubtractor> pKNN;
    // pMOG = bgsegm::createBackgroundSubtractorMOG(); //MOG approach
    pMOG2 = createBackgroundSubtractorMOG2(); //MOG2 approach
    // pGMG = bgsegm::createBackgroundSubtractorGMG(); //MOG2 approach
    pKNN = createBackgroundSubtractorKNN();

    for(;;)  
    {  
        double t = (double)cvGetTickCount();  
  
        cap >> frame;  
        if(frame.empty())
        {
            cout << "end of video" << endl;
            break;
        }
        // pMOG->apply(frame, fgMaskMOG, 0.1);
        //update the background model
        pMOG2->apply(frame, fgMaskMOG2, 0.1);
        // pGMG->apply(frame, fgMaskGMG, 0.1);
        pKNN->apply(frame, fgMaskKNN, 0.02);
        //get the frame number and write it on the current frame
        stringstream ss;
        rectangle(frame, cv::Point(10, 2), cv::Point(100,20),
                  cv::Scalar(255,255,255), -1);
        ss << cap.get(CAP_PROP_POS_FRAMES);
        string frameNumberString = ss.str();
        putText(frame, frameNumberString.c_str(), cv::Point(15, 15),
                FONT_HERSHEY_SIMPLEX, 0.5 , cv::Scalar(0,0,0));
        //show the current frame and the fg masks
        imshow("Frame", frame);
        // imshow("FG Mask MOG", fgMaskMOG);
        imshow("FG Mask MOG 2", fgMaskMOG2);
        // imshow("FG Mask GMG", fgMaskGMG);
        imshow("FG Mask KNN", fgMaskKNN);
        //get the input from the keyboard
        char keyboard = waitKey( 20 );
  
        
        if(keyboard == 27)
        {
            cout <<"exit" << endl;
            break;
        }

  
        t = (double)cvGetTickCount() - t;  
        cout << "cost time: " << t / ((double)cvGetTickFrequency()*1000.) << endl;  
    }  
    return 0;  
}  
